class Railway
{
	 public:
		  char key[5],name[30],price[5],availseats[10],train[12],src[16],dest[16];
		  void initial();
		  void read();
		  void store(int);
		  int remove(int,char *);
		  int hash(char *);
		  void displayall();
		  void retrieve(int addr,char k[]);
 };
void Railway::initial()
{
	int i,j;
	file.open(fn,ios::in);
	if(!file)
	{
		file.open(fn,ios::out);
		if(!file)
		{
			cout<<"Unable to open the file";
			getch();
			exit(1);
		}
		for(i=0;i<max;i++)
		{
			file.seekp(i*recsize*5+i*2,ios::beg);
			for(j=0;j<(recsize)*5;j++)
				file<<"#";
			file<<endl;
		}
		cout<<"Empty file created"<<endl;
	}
	file.close();
	return;
 }
 
 
 
 
 
void Railway::read()
{
	cout<<"Enter the record key:";	gets(key);
	cout<<"Enter the name:";        gets(name);
	cout<<"Enter the price:";      	gets(price);
	cout<<"Enter the availseats:";  gets(availseats);
	cout<<"Enter the train name:";  gets(train);
	cout<<"Enter the source:";      gets(src);
	cout<<"Enter the destination:"; gets(dest);
	strcpy(buffer,key);             strcat(buffer,"|");
	strcat(buffer,name);            strcat(buffer,"|");
	strcat(buffer,price);           strcat(buffer,"|");
	strcat(buffer,availseats);      strcat(buffer,"|");
	strcat(buffer,train);           strcat(buffer,"|");
	strcat(buffer,src);             strcat(buffer,"|");
	strcat(buffer,dest);            strcat(buffer,"|");
	
	return;
 }
int Railway::hash(char* key)
{
	int i=0,sum=0;
	while(key[i]!='\0')
	{
		sum=sum+(key[i]-48);
		i++;
	}
	return sum % max;
}
